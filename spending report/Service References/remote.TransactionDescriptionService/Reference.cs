//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SpendingReport.remote.TransactionDescriptionService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="remote.TransactionDescriptionService.ITransactionDescriptionService")]
    public interface ITransactionDescriptionService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransactionDescriptionService/AddTransactionCategory", ReplyAction="http://tempuri.org/ITransactionDescriptionService/AddTransactionCategoryResponse")]
        bool AddTransactionCategory(SpendingReport.Models.CategoryModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransactionDescriptionService/AddTransactionCategory", ReplyAction="http://tempuri.org/ITransactionDescriptionService/AddTransactionCategoryResponse")]
        System.Threading.Tasks.Task<bool> AddTransactionCategoryAsync(SpendingReport.Models.CategoryModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransactionDescriptionService/GetAllTransactionCategories", ReplyAction="http://tempuri.org/ITransactionDescriptionService/GetAllTransactionCategoriesResp" +
            "onse")]
        SpendingReport.Models.TransactionCategoriesModel[] GetAllTransactionCategories(bool withNames);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransactionDescriptionService/GetAllTransactionCategories", ReplyAction="http://tempuri.org/ITransactionDescriptionService/GetAllTransactionCategoriesResp" +
            "onse")]
        System.Threading.Tasks.Task<SpendingReport.Models.TransactionCategoriesModel[]> GetAllTransactionCategoriesAsync(bool withNames);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransactionDescriptionService/GetTransactionCategoriesById", ReplyAction="http://tempuri.org/ITransactionDescriptionService/GetTransactionCategoriesByIdRes" +
            "ponse")]
        SpendingReport.Models.TransactionCategoriesModel GetTransactionCategoriesById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransactionDescriptionService/GetTransactionCategoriesById", ReplyAction="http://tempuri.org/ITransactionDescriptionService/GetTransactionCategoriesByIdRes" +
            "ponse")]
        System.Threading.Tasks.Task<SpendingReport.Models.TransactionCategoriesModel> GetTransactionCategoriesByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransactionDescriptionService/UpdateAllCategories", ReplyAction="http://tempuri.org/ITransactionDescriptionService/UpdateAllCategoriesResponse")]
        void UpdateAllCategories();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransactionDescriptionService/UpdateAllCategories", ReplyAction="http://tempuri.org/ITransactionDescriptionService/UpdateAllCategoriesResponse")]
        System.Threading.Tasks.Task UpdateAllCategoriesAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITransactionDescriptionServiceChannel : SpendingReport.remote.TransactionDescriptionService.ITransactionDescriptionService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TransactionDescriptionServiceClient : System.ServiceModel.ClientBase<SpendingReport.remote.TransactionDescriptionService.ITransactionDescriptionService>, SpendingReport.remote.TransactionDescriptionService.ITransactionDescriptionService {
        
        public TransactionDescriptionServiceClient() {
        }
        
        public TransactionDescriptionServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TransactionDescriptionServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TransactionDescriptionServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TransactionDescriptionServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool AddTransactionCategory(SpendingReport.Models.CategoryModel model) {
            return base.Channel.AddTransactionCategory(model);
        }
        
        public System.Threading.Tasks.Task<bool> AddTransactionCategoryAsync(SpendingReport.Models.CategoryModel model) {
            return base.Channel.AddTransactionCategoryAsync(model);
        }
        
        public SpendingReport.Models.TransactionCategoriesModel[] GetAllTransactionCategories(bool withNames) {
            return base.Channel.GetAllTransactionCategories(withNames);
        }
        
        public System.Threading.Tasks.Task<SpendingReport.Models.TransactionCategoriesModel[]> GetAllTransactionCategoriesAsync(bool withNames) {
            return base.Channel.GetAllTransactionCategoriesAsync(withNames);
        }
        
        public SpendingReport.Models.TransactionCategoriesModel GetTransactionCategoriesById(int id) {
            return base.Channel.GetTransactionCategoriesById(id);
        }
        
        public System.Threading.Tasks.Task<SpendingReport.Models.TransactionCategoriesModel> GetTransactionCategoriesByIdAsync(int id) {
            return base.Channel.GetTransactionCategoriesByIdAsync(id);
        }
        
        public void UpdateAllCategories() {
            base.Channel.UpdateAllCategories();
        }
        
        public System.Threading.Tasks.Task UpdateAllCategoriesAsync() {
            return base.Channel.UpdateAllCategoriesAsync();
        }
    }
}
