//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SpendingReport.remote.TransactionDescriptionService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="remote.TransactionDescriptionService.ITransactionDescriptionService")]
    public interface ITransactionDescriptionService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransactionDescriptionService/AddTransactionDescription", ReplyAction="http://tempuri.org/ITransactionDescriptionService/AddTransactionDescriptionRespon" +
            "se")]
        bool AddTransactionDescription(SpendingReport.Models.DescriptionModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransactionDescriptionService/AddTransactionDescription", ReplyAction="http://tempuri.org/ITransactionDescriptionService/AddTransactionDescriptionRespon" +
            "se")]
        System.Threading.Tasks.Task<bool> AddTransactionDescriptionAsync(SpendingReport.Models.DescriptionModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransactionDescriptionService/GetAllTransactionDescriptions", ReplyAction="http://tempuri.org/ITransactionDescriptionService/GetAllTransactionDescriptionsRe" +
            "sponse")]
        SpendingReport.Models.TransactionDescriptionsModel[] GetAllTransactionDescriptions();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransactionDescriptionService/GetAllTransactionDescriptions", ReplyAction="http://tempuri.org/ITransactionDescriptionService/GetAllTransactionDescriptionsRe" +
            "sponse")]
        System.Threading.Tasks.Task<SpendingReport.Models.TransactionDescriptionsModel[]> GetAllTransactionDescriptionsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransactionDescriptionService/GetTransactionDescriptionsById", ReplyAction="http://tempuri.org/ITransactionDescriptionService/GetTransactionDescriptionsByIdR" +
            "esponse")]
        SpendingReport.Models.TransactionDescriptionsModel GetTransactionDescriptionsById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransactionDescriptionService/GetTransactionDescriptionsById", ReplyAction="http://tempuri.org/ITransactionDescriptionService/GetTransactionDescriptionsByIdR" +
            "esponse")]
        System.Threading.Tasks.Task<SpendingReport.Models.TransactionDescriptionsModel> GetTransactionDescriptionsByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransactionDescriptionService/UpdateAllDescriptions", ReplyAction="http://tempuri.org/ITransactionDescriptionService/UpdateAllDescriptionsResponse")]
        void UpdateAllDescriptions();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransactionDescriptionService/UpdateAllDescriptions", ReplyAction="http://tempuri.org/ITransactionDescriptionService/UpdateAllDescriptionsResponse")]
        System.Threading.Tasks.Task UpdateAllDescriptionsAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITransactionDescriptionServiceChannel : SpendingReport.remote.TransactionDescriptionService.ITransactionDescriptionService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TransactionDescriptionServiceClient : System.ServiceModel.ClientBase<SpendingReport.remote.TransactionDescriptionService.ITransactionDescriptionService>, SpendingReport.remote.TransactionDescriptionService.ITransactionDescriptionService {
        
        public TransactionDescriptionServiceClient() {
        }
        
        public TransactionDescriptionServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TransactionDescriptionServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TransactionDescriptionServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TransactionDescriptionServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool AddTransactionDescription(SpendingReport.Models.DescriptionModel model) {
            return base.Channel.AddTransactionDescription(model);
        }
        
        public System.Threading.Tasks.Task<bool> AddTransactionDescriptionAsync(SpendingReport.Models.DescriptionModel model) {
            return base.Channel.AddTransactionDescriptionAsync(model);
        }
        
        public SpendingReport.Models.TransactionDescriptionsModel[] GetAllTransactionDescriptions() {
            return base.Channel.GetAllTransactionDescriptions();
        }
        
        public System.Threading.Tasks.Task<SpendingReport.Models.TransactionDescriptionsModel[]> GetAllTransactionDescriptionsAsync() {
            return base.Channel.GetAllTransactionDescriptionsAsync();
        }
        
        public SpendingReport.Models.TransactionDescriptionsModel GetTransactionDescriptionsById(int id) {
            return base.Channel.GetTransactionDescriptionsById(id);
        }
        
        public System.Threading.Tasks.Task<SpendingReport.Models.TransactionDescriptionsModel> GetTransactionDescriptionsByIdAsync(int id) {
            return base.Channel.GetTransactionDescriptionsByIdAsync(id);
        }
        
        public void UpdateAllDescriptions() {
            base.Channel.UpdateAllDescriptions();
        }
        
        public System.Threading.Tasks.Task UpdateAllDescriptionsAsync() {
            return base.Channel.UpdateAllDescriptionsAsync();
        }
    }
}
